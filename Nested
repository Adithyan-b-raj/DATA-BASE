-- 1. Number of employees in PROJECT where Praveen & Aruna are not working
SELECT COUNT(DISTINCT ENO)
FROM PROJECT
WHERE PNO NOT IN (
    SELECT DISTINCT PNO
    FROM PROJECT
    WHERE ENO IN (
        SELECT ENO FROM EMPLOYEE WHERE ENAME IN ('Praveen', 'Aruna')
    )
);

-- 2. Number of employees whose salary is greater than average salary
SELECT COUNT(*)
FROM EMPLOYEE
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE);

-- 3. Project details of employees with maximum salary
SELECT *
FROM PROJECT
WHERE ENO IN (
    SELECT ENO
    FROM EMPLOYEE
    WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEE)
);

-- 4. Department in which youngest employee works
SELECT DEPT
FROM EMPLOYEE
WHERE DOB = (SELECT MAX(DOB) FROM EMPLOYEE);

-- 5. Details of employee who joined in January
SELECT *
FROM EMPLOYEE
WHERE EXTRACT(MONTH FROM DOJ) = 1;

-- 6. Month and count of employees joined in each month
SELECT TO_CHAR(DOJ, 'Month') AS JOIN_MONTH, COUNT(*) AS EMP_COUNT
FROM EMPLOYEE
GROUP BY TO_CHAR(DOJ, 'Month');

-- 7. Update details of employees who joined in March and salary > average salary
UPDATE EMPLOYEE
SET DEPT = 'UpdatedDept'  -- Example update
WHERE EXTRACT(MONTH FROM DOJ) = 3
  AND SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE);

-- 8. Update salary of senior most employee by 10%
UPDATE EMPLOYEE
SET SALARY = SALARY * 1.10
WHERE DOJ = (SELECT MIN(DOJ) FROM EMPLOYEE);

-- 9. Details of employees working in a project in which Arun is not working
SELECT *
FROM EMPLOYEE
WHERE ENO IN (
    SELECT ENO
    FROM PROJECT
    WHERE PNO NOT IN (
        SELECT PNO
        FROM PROJECT
        WHERE ENO = (SELECT ENO FROM EMPLOYEE WHERE ENAME = 'Arun')
    )
);

-- 10. Details of employees in CSE department sorted alphabetically
SELECT *
FROM EMPLOYEE
WHERE DEPT = 'CSE'
ORDER BY ENAME ASC;
